[pyprland]
plugins = [
  # "expose",
  # "fetch_client_menu",
  # "lost_windows",
  # "magnify",
  "scratchpads",
  # "shift_monitors",
  "toggle_special",
  # "workspaces_follow_focus",
  "shortcuts_menu",
]

[pyprland.variables]
term_classed = "kitty -1 --instance-group kitty_sock -o allow_remote_control=yes --listen-on unix:/tmp/kitty_sock -o confirm_os_window_close=0 --class"

[scratchpads.term]
animation = "fromTop"
command = "[term_classed] term"
match_by = "class"
class = "term"
size = "504px 225px"
max_size = "1920px 100%"
process_tracking = false


[scratchpads.btop]
animation = "fromLeft"
command = "[term_classed] btop -e btop"
match_by = "class"
class = "btop"
size = "499px 414px"
max_size = "1920px 100%"
position = "2% 59%"
process_tracking = false


[scratchpads.nchat]
animation = "fromLeft"
command = "[term_classed] nchat -e nchat"
match_by = "class"
class = "nchat"
size = "504px 270px"
max_size = "1920px 100%"
process_tracking = false

[scratchpads.ncmpcpp]
animation = "fromBottom"
command = "[term_classed] ncmpcpp -e ncmpcpp"
match_by = "class"
class = "ncmpcpp"
size = "35% 30%"
max_size = "1920px 100%"
process_tracking = false


[scratchpads.yazi]
animation = "fromRight"
command = "[term_classed] yazi -e yazi ~/"
match_by = "class"
class = "yazi"
size = "504px 270px"
max_size = "1920px 100%"
process_tracking = false

[scratchpads.thunar]
animation = "fromRight"
command = "thunar"
match_by = "class"
class = "thunar"
size = "504px 270px"
max_size = "1920px 100%"
lazy = false
# process_tracking = false

[scratchpads.rcode]
animation = "fromBottom"
command = "[term_classed] rcode -d /home/samtrek/Documents/phd_thesis/ -e nvim"
match_by = "class"
class = "rcode"
process_tracking = false

[shortcuts_menu.entries]

Relayout = "pypr relayout"
"waybar reload" = "killall -SIGUSR2 waybar"
"Hyprland socket" = 'kitty  socat - "UNIX-CONNECT:$XDG_RUNTIME_DIR/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock"'
"Hyprland logs" = 'kitty tail -f $XDG_RUNTIME_DIR/hypr/$HYPRLAND_INSTANCE_SIGNATURE/hyprland.log'


"Color picker" = [
  { name = "format", options = [
    "hex",
    "rgb",
    "hsv",
    "hsl",
    "cmyk",
  ] },
  "sleep 0.2; hyprpicker --format [format] | wl-copy", # sleep to let the menu close before the picker opens
]

screenshot = [
  { name = "what", options = [
    "output",
    "window",
    "region",
    "active",
  ] },
  "hyprshot -m [what] -o /tmp -f shot_[what].png",
]

annotate = [
  { name = "fname", command = "ls /tmp/shot_*.png" },
  "satty --filename '[fname]' --output-filename '/tmp/annotated.png'",
]
